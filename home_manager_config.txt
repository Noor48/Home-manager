{ config, pkgs, lib, inputs, nixgl, nur, username, ... }:

{
  # Home Manager version
  home.stateVersion = "24.05";

  # User information
  home.username = username;
  home.homeDirectory = "/home/${username}";

  # Enable Home Manager to manage itself
  programs.home-manager.enable = true;

  # Allow unfree packages
  nixpkgs.config.allowUnfree = true;

  # Home packages
  home.packages = with pkgs; [
    # Terminal utilities
    bat              # Better cat
    eza              # Better ls
    fd               # Better find
    ripgrep          # Better grep
    fzf              # Fuzzy finder
    zoxide           # Better cd
    starship         # Shell prompt
    
    # Development tools
    lazygit          # Git TUI
    gh               # GitHub CLI
    docker-compose   # Docker compose
    
    # System monitoring
    btop             # System monitor
    du-dust          # Better du
    
    # File management
    ranger           # Terminal file manager
    
    # Media and graphics
    mpv              # Media player
    imagemagick      # Image manipulation
    
    # Communication
    discord          # Discord client
    
    # Productivity
    obsidian         # Note taking
    
    # NUR packages (examples)
    # nur.repos.some-user.some-package
    
    # nixGL wrapped packages for non-NixOS systems
    # (nixgl.nixGLIntel pkgs.firefox)  # Use this for Intel graphics
    # (nixgl.nixGLNvidia pkgs.firefox) # Use this for NVIDIA graphics
  ];

  # Git configuration
  programs.git = {
    enable = true;
    userName = "Your Name";
    userEmail = "your.email@example.com";
    extraConfig = {
      init.defaultBranch = "main";
      push.default = "simple";
      pull.rebase = true;
      core.editor = "nvim";
    };
    delta = {
      enable = true;
      options = {
        navigate = true;
        light = false;
        side-by-side = true;
      };
    };
  };

  # Zsh configuration
  programs.zsh = {
    enable = true;
    enableCompletion = true;
    autosuggestion.enable = true;
    syntaxHighlighting.enable = true;
    
    shellAliases = {
      ll = "eza -la";
      la = "eza -la";
      ls = "eza";
      cat = "bat";
      grep = "rg";
      find = "fd";
      cd = "z";
      
      # Nix aliases
      rebuild = "sudo nixos-rebuild switch --flake .";
      rebuild-home = "home-manager switch --flake .";
      nix-gc = "sudo nix-collect-garbage -d";
      nix-store-gc = "sudo nix-store --gc";
      
      # Git aliases
      g = "git";
      ga = "git add";
      gc = "git commit";
      gp = "git push";
      gl = "git pull";
      gs = "git status";
      gd = "git diff";
      lg = "lazygit";
    };
    
    history = {
      size = 10000;
      path = "${config.xdg.dataHome}/zsh/history";
      ignoreDups = true;
      ignoreSpace = true;
    };
    
    initExtra = ''
      # Initialize zoxide
      eval "$(zoxide init zsh)"
      
      # Initialize starship
      eval "$(starship init zsh)"
      
      # Custom functions
      mkcd() {
        mkdir -p "$1" && cd "$1"
      }
      
      # Nix shell with packages
      nix-shell-p() {
        nix-shell -p "$@"
      }
    '';
  };

  # Starship prompt
  programs.starship = {
    enable = true;
    settings = {
      format = "$all$character";
      character = {
        success_symbol = "[➜](bold green)";
        error_symbol = "[➜](bold red)";
      };
      git_branch = {
        symbol = " ";
      };
      nix_shell = {
        disabled = false;
        impure_msg = "[impure shell](bold red)";
        pure_msg = "[pure shell](bold green)";
        format = "via [$symbol$state( \\($name\\))]($style) ";
      };
    };
  };

  # Neovim configuration
  programs.neovim = {
    enable = true;
    defaultEditor = true;
    viAlias = true;
    vimAlias = true;
    
    extraConfig = ''
      set number
      set relativenumber
      set tabstop=2
      set shiftwidth=2
      set expandtab
      set smartindent
      set wrap
      set smartcase
      set noswapfile
      set nobackup
      set undodir=~/.vim/undodir
      set undofile
      set incsearch
      set scrolloff=8
      set colorcolumn=80
      
      " Theme
      set termguicolors
      colorscheme default
    '';
  };

  # Tmux configuration
  programs.tmux = {
    enable = true;
    terminal = "screen-256color";
    historyLimit = 100000;
    extraConfig = ''
      # Set prefix to Ctrl-a
      unbind C-b
      set-option -g prefix C-a
      bind-key C-a send-prefix
      
      # Split panes using | and -
      bind | split-window -h
      bind - split-window -v
      unbind '"'
      unbind %
      
      # Reload config file
      bind r source-file ~/.tmux.conf
      
      # Switch panes using Alt-arrow without prefix
      bind -n M-Left select-pane -L
      bind -n M-Right select-pane -R
      bind -n M-Up select-pane -U
      bind -n M-Down select-pane -D
      
      # Enable mouse mode
      set -g mouse on
      
      # Start windows and panes at 1, not 0
      set -g base-index 1
      setw -g pane-base-index 1
    '';
  };

  # Alacritty terminal
  programs.alacritty = {
    enable = true;
    settings = {
      window = {
        opacity = 0.95;
        padding = {
          x = 10;
          y = 10;
        };
      };
      font = {
        normal = {
          family = "JetBrains Mono";
          style = "Regular";
        };
        size = 11.0;
      };
      colors = {
        primary = {
          background = "#1e1e2e";
          foreground = "#cdd6f4";
        };
      };
    };
  };

  # Firefox configuration
  programs.firefox = {
    enable = true;
    profiles.default = {
      name = "Default";
      settings = {
        "general.smoothScroll" = true;
        "browser.tabs.warnOnClose" = false;
        "browser.startup.homepage" = "about:home";
      };
    };
  };

  # VSCode configuration
  programs.vscode = {
    enable = true;
    extensions = with pkgs.vscode-extensions; [
      # Nix
      bbenoist.nix
      
      # Git
      eamodio.gitlens
      
      # Themes
      catppuccin.catppuccin-vsc
      
      # General
      ms-vscode.atom-keybindings
      vscodevim.vim
      
      # Language support
      ms-python.python
      bradlc.vscode-tailwindcss
      esbenp.prettier-vscode
    ];
    userSettings = {
      "workbench.colorTheme" = "Catppuccin Mocha";
      "editor.fontFamily" = "'JetBrains Mono', 'monospace'";
      "editor.fontSize" = 14;
      "editor.lineNumbers" = "relative";
      "vim.useCtrlKeys" = true;
      "vim.useSystemClipboard" = true;
    };
  };

  # XDG directories
  xdg = {
    enable = true;
    userDirs = {
      enable = true;
      createDirectories = true;
    };
  };

  # Catppuccin theme
  catppuccin = {
    enable = true;
    flavor = "mocha";
    accent = "blue";
  };

  # Stylix theming
  stylix = {
    enable = true;
    base16Scheme = "${pkgs.base16-schemes}/share/themes/catppuccin-mocha.yaml";
    image = ./wallpaper.jpg; # Add your wallpaper here
    
    fonts = {
      monospace = {
        package = pkgs.jetbrains-mono;
        name = "JetBrains Mono";
      };
      sansSerif = {
        package = pkgs.noto-fonts;
        name = "Noto Sans";
      };
      serif = {
        package = pkgs.noto-fonts;
        name = "Noto Serif";
      };
    };
  };

  # Session variables
  home.sessionVariables = {
    EDITOR = "nvim";
    BROWSER = "firefox";
    TERMINAL = "alacritty";
  };

  # Service configurations
  services = {
    # Automatic updates for Home Manager
    # home-manager.auto-upgrade = {
    #   enable = true;
    #   frequency = "weekly";
    # };
  };
}